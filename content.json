{"posts":[{"title":"Announcement &#x2F; 须知","text":"AnnouncementThis blog will be a hybrid of English and Chinese posts. Probably some posts will not have translations between each other in this site. Please use translation tools if you want. 须知本博客会混合一些英文和中文的文章。并且很有可能本博客并不在英语和中文之间进行翻译。如有需要请使用翻译工具。","link":"/2023/04/10/announcement/"},{"title":"test","text":"Testtestetsteststset","link":"/2023/07/07/test/"},{"title":"Windows安装Tensorflow以使用GPU计算","text":"最近ML课大量使用Tensorflow进行计算，并且卷积神经网络的计算量较大，因此我决定使用我的RTX3070Ti进行计算加速，增加生产力。本文记录了我在Windows 10上安装Tensorflow以使用GPU计算的过程。 版本选择本文安装的是Tensorflow 2.10.0 版本。此版本为Windows最后一个原生支持GPU计算的版本。自从Tensorflow 2.11开始，如需在Windows上使用Tensorflow GPU，需要使用WSL或者虚拟机。本文不会讨论WSL或者虚拟机的安装，如需了解，请自行搜索。CUDA和cuDNN的版本选择Tensorflow 2.10.0支持CUDA 11.2和cuDNN 8.1。因此，我们需要安装这两个版本的软件。本文使用Anaconda进行安装 建议不要使用过旧版本的Tensorflow，过老版本会存在很多的依赖问题。 安装CUDA从NVDIA官网上下载CUDA 11.2的安装包。传送门下载完成后运行安装包，根据提示完成安装。 安装cuDNN从NVDIA官网上下载cuDNN 8.1的安装包。传送门下载完成后解压缩，将解压缩后的文件夹复制到CUDA的安装目录下。默认安装目录为C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.2。将压缩包内的文件直接与CUDA目录合并即可。 安装Anaconda从Anaconda官网上下载Anaconda 3的安装包。传送门根据提示完成安装。建议不要勾选添加PATH环境变量。 创建conda虚拟环境创建一个新的env:conda create --name tensorflow python=3.9 激活env:conda activate tensorflow 接下来我们的操作都会在这个虚拟环境下进行，并不会影响到系统环境。 如果需要查看更多Conda的常用命令，可以参考此文章传送门, 或者直接在命令行中输入conda查看帮助。 安装Tensorflow安装Tensorflow 2.10.0pip install tensorflow==2.10.0 如果没有任何报错的话，此时Tensorflow已经安装完成了。 接下来可以自行安装其余的包，如numpy，matplotlib等。 测试Tensorflow测试Tensorflow是否安装成功import tensorflow as tf print(tf.__version__) 如果输出的版本号为2.10.0，则说明Tensorflow安装成功。 测试Tensorflow是否支持GPUtf.config.list_physical_devices('GPU') 如果输出的结果为[PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]，则说明Tensorflow支持GPU。python3.10.10也可以支持Tensorflow 2.10.0至此，本文完结。","link":"/2023/04/13/Windows%E5%AE%89%E8%A3%85Tensorflow%E4%BB%A5%E4%BD%BF%E7%94%A8GPU%E8%AE%A1%E7%AE%97/"},{"title":"anaconda frequent commands","text":"conda relatedview conda version conda --version conda info Update conda conda update conda env relatedCreate virtual envs conda create --name evname Create envs with specific version conda create --name python36 python=3.6 Activate env conda activate envname Go back to previous env conda deactivate List existing envs conda info -e Remove envs conda env remove --n envname Clone env conda create --name clone_env --clone envname Package relatedInstall a package conda install packagename Update a package conda update packagename Update all packages conda update --all Remove a package conda remove packagename Sharing conda envExport a env as a config file conda env export &gt; environment.yml Create a env from a config file conda env create -f environment.yml","link":"/2023/04/11/anaconda/"},{"title":"Hexo frequent commands","text":"This post is only about several commands that will be used during updating this blog. Hexo related commands: npm install hexo -g #install Hexo npm update hexo -g #update Hexo hexo init #initialize a new blog Blog related commands: hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #create a new post hexo g == hexo generate #Generate the blog hexo s == hexo server #start preview webserver hexo d == hexo deploy # deploy to remote server i.e Github Preview server related commands: hexo server #Hexo will monitor the changes to files and update by itself. No need to reboot the server hexo server -s #static mode hexo server -p 5000 #change port hexo server -i 192.168.1.1 #set ip address hexo clean #clean cache","link":"/2023/04/10/commands/"},{"title":"使用Docker拉取OP编译环境并进行编译","text":"最近台式机电脑电源坏了，送厂返修，很长一段时间没有台式机用，遂决定使用安装了OMV的小主机进行编译。由于系统版本较老，安装环境无法成功，于是使用Ubuntu-docker进行环境的搭建，并打包上传到DockerHub，以便下次使用，并且节省空间。 声明 此次只是博主的一次尝试，docker image并没有进行精简，提及可能会比较大。 op的一些包已经下载完成，减少多次下载的烦恼。 docker可以根据需要将编译成果或者整个Lede目录挂载到本机方便文件操作，本篇只使用docker cp命令进行文件的转移。 不喜勿喷，大佬勿喷。 使用Docker编译环境拉取镜像请前往dockerHub拉取镜像，传送门。选择最新的docker镜像的tag进行拉取： docker pull frank921/opcompile:v3 部署镜像docker run -itd --name opcompile frank921/opcompile:v3 通过docker exec 进入容器并进行编译操作。注意：这里可以通过 -v 参数添加目录映射，具体请查询docker文档 docker exec -it opcompile /bin/bash 由于openwrt的编译程序不支持使用root用户进行编译，切换至lede用户进行编译并进入lede主目录: su lede cd ~/lede lede用户的用户密码默认是12345678，为了安全性，请及时更改 进行环境更新： sudo apt update -y sudo apt full-upgrade -y 进行仓库更新： git pull ./scripts/feeds update -a ./scripts/feeds install -a make defconfig 默认配置文件中我加入了一些常用插件，如果不需要这类插件，输入： rm -rf ./tmp &amp;&amp; rm -rf .config 然后进入编译流程： make menuconfig make download -j8 make V=s -j$(nproc) 特别提示由于编译过程ssh不能中断，在网络较差的环境下，请使用screen进行持久化。创建窗口： screen -S compiler 此时会进入窗口，可以进行编译操作，如果要推出窗口，请按 Ctrl +AD （按住Ctrl,一次按下A和D）此时就能退出窗口连接回窗口： screen -r compiler 如果发现因为窗口Attached无法连接，可以输入: screen -d compiler 分离会话，然后输入： screen -r compiler 进入会话。 编译完成当无错误编译完成以后，可以进入bin/targets找到相应的固件。进入主机，输入： docker ps 查询相应容器ID。记住ID 输入： docker cp 容器ID:/home/lede/lede/bin/targets 主机目录 复制完成固件，复制过程会等待几分钟，正常现象。接着进入主机相应目录获取固件。 Enjoy!特别鸣谢https://github.com/coolsnowwolf/lede https://github.com/kenzok8/openwrt-packages","link":"/2022/04/21/%E4%BD%BF%E7%94%A8Docker%E6%8B%89%E5%8F%96OP%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E5%B9%B6%E8%BF%9B%E8%A1%8C%E7%BC%96%E8%AF%91/"},{"title":"配置OpenWRT的802.1x认证加入内部网","text":"又是很久没有更新了，其实这个已经完成了很多时候了，但是事情太多一直没来的及写。 因为学校使用的Ethernet是通过802.1x认证的（好像WIFI也是），对于智能家居等不方便更改网络的设备非常不方便，遂有了添加路由器的想法。 顺便说一句，校园网的速度还是非常爽的，最重要的是包含在房租里了，不用另外付费。 这个测速确认是外网速度，校园内没有测速节点。（可惜是NAT3，不然可以开机子了🤣） 硬件配置主路由使用的是R2S，对于我一个人来说性能足够了（毕竟不需要科学上网了）。 整体速度能跑满上下千兆，内网还带了一个nas做pt下载用，性能足够。 本人使用骷髅头固件，注意自编译固件会有大负载下重启的问题，此固件无此类问题。传送门 另外我还买了一个小米AX1800，就是国内的小米AX5作为AP使用，刷入极客固件，无线网的速度能跑到700Mbps左右。 其实这个成绩还是挺差的，没有达到我的心理预期，WIFI6性价比路由器还没有WIFI5强，其实没有升级的必要 配置802.1x认证最重要的就是配置802.1x认证了，不然都是瞎扯。 1. 安装完整WPAD现在OpenWRT上默认使用的是wpad-mini，并不支持802.1x认证，需要安装wpad来进行认证。 如果OpenWRT系统使用了wpad完整版或者Hostapd就无需再次安装，直接跳到下一步，上面使用的骷髅头固件，在2022/2/19的版本以后已经集成了hostapd，无需此步。 如果有网络访问opkg update opkg download wpad opkg remove wpad-basic opkg install wpad_&lt;version&gt;_&lt;arch&gt;.ipk #请注意替换文件名 这时候一般是没有外网的，可以通过手机热点，共享给电脑，再通过windows共享给路由器，路由器注意修改网关，稍微有些复杂，这里不再赘述，不会的话可以通过下面的方式。 如果没有外网访问1. 获取软件包的位置在控制台中输入 opkg update 找到如下的一个URL（从开头一直到base)： 将网址输入浏览器，查找wpad，下载对应的软件包，如下所示： 通过SCP或者FTP将软件包上传到软路由下并进行安装： opkg install wpadxxxxxx.ipk 配置802.1x配置文件创建一个配置文件: vim /etc/config/wpa_supplicant.802.1x.conf 输入如下信息： ctrl_interface=/var/run/wpa_supplicant ctrl_interface_group=root ap_scan=0 network={ key_mgmt=IEEE8021X eap=PEAP phase2=&quot;autheap=MSCHAPV2&quot; identity=&quot;&lt;&lt;username&gt;&gt;&quot; password=&quot;&lt;&lt;password&gt;&gt;&quot; priority=2 } 这里需要注意一下校园或者单位的加密方式等配置，具体请在各自网站查找，或询问技术人员。 验证信息查找验证自己WAN口的网卡设备名称 执行命令并确认是否正常：（注意修改网卡名称） wpa_supplicant -D wired -i eth0.2 -c /etc/config/wpa_supplicant.802.1x.conf -dd -t 创建开机脚本创建文件： vim /etc/init.d/wpa-autostart 输入以下内容：（注意修改网卡设备名称） #!/bin/sh /etc/rc.common START=99 start() { echo start pgrep -f wpa_supplicant.802.1x.conf|xargs kill wpa_supplicant -D wired -i eth0.2 -c /etc/config/wpa_supplicant.802.1x.conf -dd -t &amp; } 赋予脚本权限和启动自启脚本： chmod +x /etc/init.d/wpa-autostart /etc/init.d/wpa-autostart enable 创建检测脚本此脚本是为了断线重连，非必须。 创建一个crontab脚本： #!/bin/sh export PATH=/usr/sbin:/usr/bin:/sbin:/bin # uci show network.wan.ifname wan=eth0.2 time=$(date +'%F %T') ipaddr=$(ip -4 -o a s $wan) if [ -n &quot;$ipaddr&quot; ] then ip=$(ip -o a s $wan|awk '{print $4}') echo &quot;__INFO: $(basename &quot;$0&quot;) $time OK $wan IP: $ip&quot; else echo &quot;__INFO: $(basename &quot;$0&quot;) $time ERROR $wan IP missing&quot; if pgrep -af wpa_supplicant.802.1x.conf then pgrep -f wpa_supplicant.802.1x.conf|xargs kill fi echo &quot;$time $(basename &quot;$0&quot;)&quot; &gt;&gt; /tmp/802.1x-restart.log wpa_supplicant -D wired -i $wan -c /etc/config/wpa_supplicant.802.1x.conf -dd -t &amp; fi 注意：请修改对应的网卡设备名称，此脚本只检测是否存在对应的IPV4地址，并不检测和上级路由是否通畅。 添加crontab任务： crontab -l 加入以下内容： * * * * * /bin/sh -x /etc/config/check.802.1x.sh &amp;&gt; /tmp/check.802.1x.log 启动crontab服务并观察： /etc/init.d/cron enable /etc/init.d/cron start pgrep -af cron logread -e cron 到这里就基本完成上网的认证了 升级OpenWRT系统相关问题由于Openwrt系统默认不保存我们生成的系统文件，我们要对备份做一些修改。进入web后台： 加入下列路径： /etc/config/wpa_supplicant.802.1x.conf /etc/init.d/wpa-autostart /etc/config/check.802.1x.sh 如果没有wpad的系统也可以备份一下wpad安装包，根据自己的路径进行备份。（有可能升级以后旧版wpad安装包无法安装） 点击右下角提交，进入动作选项卡，执行一次备份。 关于DNS接管问题有的时候认证成功获取到ip以后访问外网IP可以通，外网域名无法解析的情况下，可能是内网将dns接管了 只需要在 luci 的 Network &gt; DHCP and DNS 下关闭 Rebind protection 并且使用内网DNS地址就能解决该问题了。 Reference: openwrt 有线 802.1X 认证 OpenWrt 连接 802.1x 认证网络 MartinaZ-blog","link":"/2022/02/20/%E9%85%8D%E7%BD%AEOpenWRT%E7%9A%84802-1x%E8%AE%A4%E8%AF%81%E5%8A%A0%E5%85%A5%E5%86%85%E9%83%A8%E7%BD%91/"},{"title":"关于使用NBMiner挖掘ETH的初体验","text":"最近因为上学博客已经好久没有更新了。 因为之前沉迷战地2042，原来的1660Ti笔记本打起游戏来已经不够用了，遂在欧洲重新配了一台电脑。基本配置是11600K+3070Ti的组合。 PS：欧洲的电脑是真的贵啊。 心想着既然这么好的电脑配了也配了，不如来试试挖矿回血。因为一些原因，电费不需要我来交，所以收入永远都是为正的。 本篇只是记录一下挖矿心得，并不是教程。 矿池选择市面上有很多挖矿矿池，请根据自己的需要进行选择。 我使用的是Binance矿池，虽然总算力不高，但是好处就是可以随时体现，对于我这种只是尝试的人还是很香的。 Binance矿池和Binance的账号是通用的，开通一个挖矿账号就可以开始挖矿了。 软件选择因为我的卡是RTX 3070Ti，是LHR版本（LHR：low hash rate），选择了NBMiner作为挖矿软件，毕竟是初来乍到，原来就听说了可以解锁68%的算力，还是很香的。 本人测试的时候Nbminer更新到了v40.1版本，亲自测试，本卡可以解锁到73.5%-74%的算力性能。 网络事项由于中国境内的特殊原因，切勿直连到矿池进行挖矿。并且SSL技术也不可靠，不可能100%绕过监管。请使用socks类代理软件进行对挖矿软件的代理。NBminer支持使用socks5类型的代理进行矿池链接，亲测效果不错。 挖矿实测根据挖矿实际测试，如果满功耗不超频的情况下，算力会在50MH/s左右波动，功耗会在210W左右, 按照现在的币价来说，不算电费一天可以赚15人名币左右，如果要回本还是要很长一个周期的。 总结现在币价逐渐走低，市场对于虚拟产品都不是特别乐观，现在如果特别想入场还是需要十分谨慎，很容易亏钱。但是如果是游戏玩家自己买了卡想回回血，在提前计算自己家中电费的情况下，还是可以试一下的。如果在中国大陆挖矿还是请使用代理类软件，防止上门请喝茶。","link":"/2022/01/29/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8NBMiner%E6%8C%96%E6%8E%98ETH%E7%9A%84%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"title":"Linux使用脚本自动更新华为云DNS（DDNS）支持OPENWRT","text":"最近应朋友的需求，研究一个华为云的DDNS解决方式，并且支持OpenWRT和一些主流Linux发行版本。 本教程来源于Github大佬开发的脚本，传送门 并且感谢另外一位大佬修改脚本，使其支持Openwrt网卡获取IP：传送门 此脚本支持IPV4与IPV6双栈，但是需要对脚本做出一些改动，下文会提到。 准备工作首先将域名解析到华为云上，这里不再赘述。 添加需要ddns的A记录或者AAAA记录。建议将TTL改小。 配置单IPV4或者单IPV6首先点击链接下载脚本文件（IPV4，IPV6)，请下载对应的脚本。 首先在脚本开头，修改个人配置 #用户名 username=&quot;&quot; #账户名 accountname=&quot;&quot; #密码 password=&quot;&quot; #域名 domain=&quot;example.com&quot; #主机名 host=&quot;www&quot; username与accountname都填你登陆的用户名，password填入密码 domain填入你的顶级域名，hosts填入二级域名，如果想直接用顶级域名，将hosts改成# 填写IP获取方式 #从外网api获取ip地址(开启1/关闭0 默认开启) REMOTE_RESOLVE=0 #从网卡获取ip地址(填写网卡名 如eth0 ens3 he-ipv6) #并请根据实际情况填写sed行数(第96 98行处) INTERFACE=&quot;&quot; 如果需要从网卡获取，将Interface改成对应的WAN口网卡。 如果要从外网API获取，请将REMOTE_RESOLVE改成1 上传到LINUX，给予权限，运行脚本 如果返回没有报错，添加到Crontab中间进行定时获取。 配置双栈据脚本作者所说： 本项目存在已知的BUG，由于华为云API采用模糊搜索策略，recordset可能存在多个返回值，这会导致解析记录无法正常更新。 经确认，为华为云方面更能迭代，目前只支持recordset的模糊搜索，请谨慎使用本脚本！ 并且按照未修改的脚本，AAAA记录会和A记录产生冲突，无法更新某一条记录。 由此我们这里需要对脚本进行手动配置 首先将A记录与AAAA记录同时添加完成。 IPV6脚本从上面的链接下载以后按照原来的脚本配置好，不需要改动，我们主要改动IPV4脚本。（改动哪个脚本都行，哪个脚本报错改哪个。） 首先，我们进入华为云DNS界面，并且对一个记录点击修改 在这里不要动任何东西。 在Chrome浏览器中，按F12，切换到Network选项卡，清除所有记录 此时在华为dns界面点击确定，此时右边会出现一些返回数据。 在控制台中按CTRL + F，搜索recordset，找到如下图所示的值，打开response选项卡，复制所有数据到一个记事本中，方便分析。 仔细阅读记事本，首先找到你需要修改的记录。 找到Zone_ID和Recordset_ID，每一条记录都会如下图所示 记住Recordset_ID和Zone_ID，打开脚本 在最后 curl -X PUT -L -k -s \\ &quot;https://$dns/v2/zones/$ZONE_ID/recordsets/$RECORDSET_ID&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -H &quot;X-Auth-Token: $token&quot; \\ -d &quot;{\\&quot;records\\&quot;: [\\&quot;$TARGET_IP\\&quot;],\\&quot;ttl\\&quot;: 1}&quot; logger -t &quot;【更新dns地址解析】&quot; &quot;完成&quot; 中间的$RECORDSET_ID 和$Zone_ID替换成记事本中对应的值 修改完成后上传Linux进行测试。","link":"/2021/08/16/Linux%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%8D%8E%E4%B8%BA%E4%BA%91DNS%EF%BC%88DDNS%EF%BC%89%E6%94%AF%E6%8C%81OPENWRT/"},{"title":"关于如何使用小猫咪与其他的类似软件","text":"注：这篇文章可能违反了中国大陆的法律规定。如果您在中国大陆，请立刻离开。请勿转载和传播，否则可能受到中国大陆法律的处罚或制裁。 机场准备 机场，顾名思义，请立刻前往当地机场 （大雾） 机场就是给你提供fq节点以及服务的网站，本人不做推荐，请自行准备好相应的订阅链接，付完款后继续阅读。 如果你实在不知道什么是机场，哪里去找，请直接找本人帮忙 准备好订阅链接或者节点链接（不推荐）。 软件准备请从Github上面下载Clash for Windows软件，下面贴出官方的下载地址： https://github.com/Fndroid/clash_for_windows_pkg/releases 找到最新的版本号，例如： （这个很可能已经不是最新的了，直接找最新的用就行了） 点击Assets，并下载文件 看到这个点击一下， 选择相应的版本进行下载，看到蓝色的字点击一下 这里Windows建议直接选EXE版本，苹果直接DMG版本，更加方便。 如果你实在找不到，这里贴一个最后更新的最新版本供你下载。 EXE 如果下载过慢，请慢慢下，或者来找本人，本人 亲 自 帮 你 下 安装软件软件下载完成以后就是傻瓜安装步骤，很简单。 订阅转换由于Clash使用了自己的配置文件书写格式，完全不兼容SS、SSR、V2ray等协议的URL书写方式，这里需要借助订阅转化，讲订阅变成小猫咪能看得懂的格式。 下面推荐一个网页订阅转化，本人也在用，如果自己觉得有更好的也可以用自己的。 转换网址 打开之后应该看到这个界面 这里可以选择基础模式或者进阶模式，两者没有什么本质的区别，操作类似 将订阅链接或者节点URL粘贴至最上面一个订阅链接的文本框中 远程配置建议选择 点击生成订阅链接 将生成的订阅链接保存起来，以后只要保持续费，这个订阅链接是可以一直用的 注（如果看不懂这里也不要紧，不影响使用，除了薯条（CNIX），请看第三条）： 进阶模式中间，包含节点、排除节点 中间可以帮助我们去除掉不需要的节点，比如各种机场五花八门的奈飞节点。 包含节点和排除节点中间支持通配符，例如`| 可以多个机场的订阅链接同时转化，达到冗余的效果。但是请勿放置过多节点，会导致小猫咪变得很卡。 如果出现订阅后出现403返回值，或者机场是薯条的，请使用自己的后端地址，需要搭建。如果需要博主帮助，请直接询问博主。 在文章最底部输入密码查看下方博主搭建订阅地址： 小猫咪的设置 打开软件 点击最左侧的Profiles，进入配置文件的设置 将转换出来的订阅链接，粘贴至最上方的白色文本框中，点击Download 选中刚刚下载下来的配置文件（点一下）。会发现点完之后，这个配置文件比其他的配置文件亮一些。 进入最左侧的Proxies中间 在最上方的节点选择一栏中，选中自动选择一项，这样小猫咪可以开始自动匹配流量并且分流。 点击最左侧的General选项，将System Proxy的按钮点绿，然后电脑就可以愉快的上网了。你也可以尽情的畅游国际世界了。 最后的话本教程只是给纯小白看的，对于小猫咪的高阶设置远远不止这些。 正是因为小猫咪的高阶配置，功能才得以强大。具体将小猫咪调试成适合自己的科学上网模式需要自己探索也可以来问本人。 本教程就到这里，尽情享受国际视野的海洋吧。","link":"/2021/02/01/%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%8C%AB%E5%92%AA%E4%B8%8E%E5%85%B6%E4%BB%96%E7%9A%84%E7%B1%BB%E4%BC%BC%E8%BD%AF%E4%BB%B6/"},{"title":"关于群晖数据恢复","text":"今天又开始给博客除草了。这篇文章其实很早就想写了，奈何最近申请季，文书写到头大，实在分不出过多的精力来写这篇博客。今天就来讲讲群晖和硬盘的那些事。 系统配置群晖DS216j, 32位CPU，512MB内存，可以说配置不能再差了，并且由于内存很小，硬盘的SWAP是不能关闭的。 1个千兆网口做内网交换 西数NAS红盘2TB*2，型号：WD20EFRX-68EUZN0 双硬盘组软RAID1，提高可靠性 事件经过最早的时候有一段时间使用群晖自带的Download station进行BT下载，众所周知，群晖自带的下载器性能很差，而且会生成大量的缓存文件，很伤硬盘，所以没到2年一块硬盘就坏了，送回原“淘宝”店家进行质保。这里需要注意一点，这个淘宝店非官方店，很可能会出现假货，我在这里并不清楚，而且质保的质量也不确定。 在今年年中，另一块硬盘开始逐渐出现坏道，但是没有达到阈值，并且群晖自带的SMART的快速检测没有发现任何问题，完全检测没有办法完成。（这里其实 又是一个大坑，家用版的群晖完整版smart无法检测完成竟然没有提示，其实这里可以直接分析这块硬盘已经坏了） 随着硬盘坏道数量越来越多，本来计划在双11重新购入硬盘，但是因为坏道太多，在10.1国庆节的低价购入了希捷酷狼4TB*2来替换原来的硬盘。 在进行raid1扩容操作前，因为疏忽忘记进行备份数据，这里也是一个坑。在1块2TB和1块4TB进行重建数据的时候，另一块系数红盘爆出大量坏道，硬盘直接损毁，存储空间也直接损毁，无法修复。随后进行数据恢复。 数据恢复群晖官方推荐使用UBUNTU进行恢复，但是我在这里并不推荐，因为组了raid必须要插入两块硬盘同时读取，非常麻烦。 原文链接 我在这里推荐一款软件，可以直接在Windows平台进行对于群晖硬盘的读取，并且Raid1可以单盘读取。 Nas Data Recovery 4.0 RuntimeNASDataRecovery_2.zip 百度上可以直接搜索到破解版，下载安装即可使用，虽然是全英文，但是不难理解。 缺点：无法进行两块raid1硬盘同时读取，修复受损文件。 事后后来发现DiskGenius可以直接读取，哭了！ 硬盘分析拿出来放入DiskGenius进行故障排查，发现SMART C5黄字，差不多要完了。随后进行坏道扫描，发现实际有800+坏道，并且大多是坏道集中在硬盘前50G中，绝对超出群晖检测的100-坏道。其实群晖的硬盘检测高度依赖SMART，如果smart无法完成，硬盘检测十分不准。 尝试写0和低格，发现有时甚至直接掉盘，遂放弃。 废物利用之前家里随手装了一台黑裙玩，一直用一块320G机械硬盘挂PT，一直觉得小，觉得这硬盘虽然损坏，但是还可以发光发热（反正下载的数据没了也就没了，再下就行）。 刚开始插进去硬盘会直接变成堪用状态，这里我直接禁用硬盘警告 创建RAID GROUP时切记进行硬盘扫描，否则直接空间损毁。 创建存储空间时创建两个，第一个空间约50G，用来隔离坏道，数据放在第二个存储空间。实际效果非常理想，PT过程中基本无硬盘错误。 这里切记全局禁止掉硬盘检查。 事后分析 千万别买非官方店的硬盘，小白大概率翻车。送保尽量自己送到原厂保修。 硬盘操作前都应该进行数据备份 别买群晖低端家用版，硬盘缓存会减小硬盘寿命（硬盘坏道集中在硬盘前部扇区） 准备这个双十一试水威联通中端机器。","link":"/2020/10/05/%E5%85%B3%E4%BA%8E%E7%BE%A4%E6%99%96%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/"},{"title":"尝试使用树莓派搭建一套低功率下载机","text":"因为最近路由器加上了流控的插件，应该大量的带宽占用不会对家宽的体验产生较大的影响，寻思着也不能让宽带闲着吧，500M的宽带也是挺贵的，如果大部分时间这么闲置，其实还是很不划算的，遂想到使用一些低功耗的机器，配上移动硬盘或者硬盘盒，做一个低功率的下载机。 因为是树莓派和移动硬盘的组合，不能保证数据的绝对安全和硬盘的寿命，不推荐长时间如此使用！ 系统配置 树莓派 3B+ Raspberry Pi OS（原Raspbian） 移动硬盘或者硬盘盒 电源5V3A 树莓派3B+虽然是千兆网口，但是是从USB2.0总线引出的，实际速率仅有330Mbps，但是应付USB2.0机械硬盘应该已经足够了。 软件系统：由Github大佬SuLingGG所编译的OpenWRT固件，基于Lean大雕的OP仓库。 OpenWrt-Rpi 软件：在Docker中安装Transmission和Jellyfin，注意使用ARMv8架构 结果先直接说结论：测试下来并没有那么好用。 首先单磁盘，只是可用，数据非常不安全，而且PT这种资源密集型的服务十分影响硬盘寿命，不建议这样使用。 其次，树莓派的发热量非常大，必须配合散热模组使用 树莓派的CPU无法完成很高效率的解码工作，高质量的资源使用Jellyfin解码会有很大的卡顿。 R2Sr2s其实和树莓派差不多（个人认为），优缺点可以参照树莓派的。同时R2S一定要配金属外壳或者风扇，否则散热是一个很大的问题。","link":"/2020/09/28/%E5%B0%9D%E8%AF%95%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E5%A5%97%E4%BD%8E%E5%8A%9F%E7%8E%87%E4%B8%8B%E8%BD%BD%E6%9C%BA/"},{"title":"关于罗技售后的体验","text":"之前因为买了个罗技的GPW，使用下来感觉手感非常的好。轻重，重心恰到好处，续航也很正常，最重要的是，使用这个鼠标可以完全摆脱线缆的束缚，甩枪起来没有后顾之忧。 但是，使用一段时间后发现，电量指示灯在关机状态下常亮，电池续航大大降低，就算关机也会快速掉电。本来以为只是电池充放问题，没有大碍。长时间正确使用之后依然发现问题没有好转的迹象，遂决定进行申请售后服务 事先准备首先去罗技官网查询全国售后网点，检查本市是否有罗技售后网点。如果不是国行，请ups到美国进行售后，原则上来说，美国的售后服务政策会更加人性化。 罗技售后网点 如果本市内有罗技售后网点，那就简单了，直接将包裹（要准备什么之后再说）送到当地罗技售后网点，请他们检测并且给出答复就行了。 如果本市内没有罗技售后网点，请找到离自己最近的一个售后网点，拨打他们的客服热线，询问寄送流程，并且邮寄到此售后网点。 注意：建议不要拨打中国大区的罗技售后电话，此电话很难有人工接听，直接询问当地售后网点就行了。如果不知道哪个离自己最近，随便拨打一个他们会告诉你 包裹准备拨打电话后得知，需要准备如下物品。 受损的鼠标和接收器、购买凭证复印件、故障描述、联系方式、回寄地址。 将以上物品直接寄送到售后网点，在签收后1周内能得到检测答复。 答复环节在大概签收后的3-4天后，我收到了答复。虽然我让他用邮箱或者QQ答复我，但他们还是打了电话过来，很无语。但是结果还是好的，他们直接告诉我，他们检测出了我GPW的故障，会对我的鼠标进行换新处理，并且还送了我一个新的GPW盒子。u1s1，这波操作还是不错的。 但是，他们还告诉我，现在GPW没有货了，需要等到10月份到货了再进行通知，这对于我来说就有点惨了，将近2-3周没有一个好的鼠标用真的很不方便。 截至本博发表为止，我还没有拿到新鼠标，等到新鼠标到手后，本文会继续更新。","link":"/2020/09/25/%E5%85%B3%E4%BA%8E%E7%BD%97%E6%8A%80%E5%94%AE%E5%90%8E%E7%9A%84%E4%BD%93%E9%AA%8C/"},{"title":"如何在OpenWrt软路由上设置OpenClash","text":"注：这篇文章可能违反了中国大陆的法律规定。如果您在中国大陆，请立刻离开。请勿转载和传播，否则可能受到中国大陆法律的处罚或制裁。 杂话因为已经开学了好久，最近都没什么时间除草，中间还因为一次手误，导致博客丢了几篇文章（备份系统不知道为什么失效了），很烦！所以最近对博客系统进行了一次更改，增加多层备份，并且简化了网络结构，使其更加稳定。 引子最近发现SSRP+这类的软路由代理插件有一定的局限性，不能做到很强大的分流，无法进行无缝的故障转移，对于我这种需要通过梯子进行国际考试的考生来说十分痛苦。随即想到了使用OpenClash。Clash相对于大多数人都不会陌生，CFW，ClashX，ClashR等等终端上的软件也是耳熟能详，但是很少人接触过OpenClash。这篇文章主要讲OpenClash该如何设置，并且如何避开一些坑。 因为OpenClash还处于开发活跃阶段，本文存在一定的时效性，如果时间过长，可能导致本文的内容失效！ 固件准备首先需要准备一个带有OpenClash的固件，这里不推荐自己使用OPKG进行安装，依赖等问题很难办，而且谁也不知道你用的什么上古版本的OpenWrt，所以说，随机编译较为稳定。这里会提供一个Github Actions的自动编译。固件含有OpenClash，需要可以自取。因为是自动编译，并没有每一个都进行测试，所以并不能保证100%的稳定性 配置文件准备熟悉Clash的朋友们应该知道，使用Clash必须要有一个yaml的配置文件。Clash无法直接使用Vmess，SSR，SS，Trojan的分享URL，需要第三方工具进行转化，并且，由于我们需要强大的分流规则，所以这里推荐ACL4SSR的规则转换 ACL4SSR 在线订阅转换 当然，还有另外一种方法，OpenClash提供了配置文件生成插件，可以自主进行规则的设置和节点的分组，但是因为我使用的ACL4SSR，没有使用OpenClash自带的，这里就不再赘述了。 开始设置首先在配置文件订阅中添加配置文件，然后设置好自动更新，可以添加多个，然后在配置文件管理中选择需要使用的配置文件 更新内核进入常规设置选择适配的CPU架构。 进入版本更新，找到一键更新，进行自动更新。 如果自动更新失败，请手动下载内核文件，并且传入指定目录。OpenClash的页面写的很清楚，这里没必要细说。重启路由器。 模式设置进入全局设置，然后看见有模式选择，默认是Redir-Host模式。这里推荐是Redir-Host模式，这个模式更加稳定，性能更好，但是更新内核文件会出现问题，DNS请求会更慢。 底下有一个黄色按钮切换到Fake-IP模式。Fake-ip能够让用户获得更加快速的DNS请求，并且可以完美更新内核文件。但是缺点很明显，DDNS会获取到错误IP，性能较差。 这里不推荐使用TUN，会导致吞吐量极具降低！ 默认选择Rule模式，推荐启用大陆IP绕过模式，减少内存和CPU占用。 UDP模式按照自己需求来开。 DNS设置 本地DNS劫持请开启，保证正常功能的使用。如果有上游DNS，请按照提示进行设置 IPV6 DNS请关闭，OpenClash对于IPV6支持较差，不建议开启。 禁止DNSmasq缓存建议开启，有时错误的缓存会导致终端无法上网。 高级设置按需进行设置，不一定要开。 其他设置GeoIP，大陆白名单，第三方规则 库都建议进行定时升级，确保最好的网络访问状态。 在网络--DHCP/DNS中查看DNS转发是否是：127.0.0.1#7874，如果不是，请修改。关闭DNS v6的解析。 如果使用TUN模式，在网络--防火墙中，间VPN接口的规则设置为全部接受。 如果发现性能跟不上，网速跑不满，请关闭：流控类软件（Qos，SQM等），BBR，SFE，Flowoffload之类的加速软件。可以一个一个关闭排除问题，不用一下子全部关掉。建议Turbo ACC中关闭DNS加速。 在主界面点击启动OpenClash Clash设置回到OpenClash主页面，点击Yacd后面的打开控制面板 这里推荐Yacd面板，比较稳定。DashBoard有时候会连接显示不全，并且跳出验证项。请勿两个同时使用，配置文件不能实时互通。 策略设置熟悉Clash的朋友们这里就不用看了，和软件版的Clash设置基本一样。 点击Proxies 将节点选择切换为自动选择（最稳定最快） 这样理论上就能进行畅快的网络遨游了。 也可以选择继续设置： 将每种Selector（后面都会有显示，如下图所示）选择自己想要的模式，达到最适合自己的分流目的。 漏网之鱼和Global两种模式推荐节点选择或者Direct（直连） 节点选择：不适配任何规则的流量通过代理 Direct：不适配任何规则的流量不通过代理，直连。 这里请按照自己的需求选择。’ 正式上网如果一步不错的做到这里，应该就可以正常访问世界范围内的公网了。 可以对本机进行测速，或者进入Yacd面板查看Connections，检查是否连上。如果出现问题，请看下文。 其他设置进行调试OpenClash 有两个显示日志文件的地方，两个地方显示的日志文件不同。 在全局设置-调试日志-生成日志后，可以检查到OpenClash和路由器本身的一些设置。检查问题并且进行更改。 在OpenClash最上面一条的任务栏上有一个运行日志，这里主要显示OpenClash的运行状态和问题。 如果发现OpenClash正常启动了，却无法上网，请检查调试日志。如果OpenClash本身出错，请检查运行日志。如果需要咨询，请附上日志文件，并详细描述问题，否则自动忽略。 自定义使用的过程中必不可少的会发现有些规则并不是我们想要的，我们就需要自定义我们的规则了。 DNS解析问题：如果想强制使某个域名使用国内ＤＮＳ解析，在全局设置－－ＤＮＳ设置－－高级设置中启用此功能。并且在下面根据示例进行填写。 自定义适用规则：进入全局设置－－规则设置中启用自定义规则。在下方自定义规则中，按照示例，添加适用的规则 ＤＮＳ劫持：拉到最下面，修改自定义ＨＯＳＴＳ文件。 完成设置到这里应该所有设置就完成了，如果需要询问，请发邮件至博主邮箱，或者通过自己的方式联系到我。","link":"/2020/09/22/%E5%A6%82%E4%BD%95%E5%9C%A8OpenWrt%E8%BD%AF%E8%B7%AF%E7%94%B1%E4%B8%8A%E8%AE%BE%E7%BD%AEOpenClash/"},{"title":"如何使用Z-file搭建个人网盘目录","text":"自从百度网盘的下载器PanDownload作者被抓，明面上无法使用之后，许多人的分享文件和接收文件变得麻烦起来。那么，有没有一个很好的办法能够将自己的文件共享给他人呢。这篇文章就要讲到的是Z-file。本站的文件分享就是基于z-file搭建的，使用OneDrive国际版的存储策略（上传下载速度感人）：网址：https://file.frankutils.xyz (已经失效) 简介Z-file是一个网盘目录索引程序，基于Java开发，能够适用于多种平台，无需考虑兼容性的问题。支持多种存储策略，应用广泛： 支持 阿里云 OSS, FTP, 华为云 OBS, 本地存储, MINIO, OneDrive 国际/家庭/个人版, OneDrive 世纪互联版, 七牛云 KODO, 腾讯云 COS, 又拍云 USS.支持缓存功能，防止对象储存调用过多api。支持全局搜索（仅2.2版本之前）支持同时挂载多个网盘支持对于文件夹加密，支持显示readme.md文件 总的来说，z-file的功能还是非常齐全的，能够胜任分享网盘的任务。同时也能够在多平台上面部署 搭建教程###官方： # CentOS系统 yum install -y java-1.8.0-openjdk unzip # Debian 9 / Ubuntu 14+ apt update apt install -y openjdk-8-jre-headless unzip # Debian 10 (Buster) 系统 apt update &amp;&amp; apt install -y apt-transport-https software-properties-common ca-certificates dirmngr gnupg wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add - add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ apt update &amp;&amp; apt install -y adoptopenjdk-8-hotspot-jre 如为更新程序, 则请先执行 ~/zfile/bin/stop.sh &amp;&amp; rm -rf ~/zfile 清理旧程序. 首次安装请忽略此选项. 下载主文件： cd ~ wget https://c.jun6.net/ZFILE/zfile-release.war mkdir zfile &amp;&amp; unzip zfile-release.war -d zfile &amp;&amp; rm -rf zfile-release.war chmod +x zfile/bin/*.sh *** 支持更改下载版本 *** 控制命令： ~/zfile/bin/start.sh 访问地址： ** 用户前台: http://127.0.0.1:8080/#/main **** 初始安装: http://127.0.0.1:8080/#/install **** 管理后台: http://127.0.0.1:8080/#/admin ** 第三方一键脚本wget -P ~ https://yun.fly-me.cn/directlink/1/Z-File/zfile.sh &amp;&amp; chmod +x zfile.sh &amp;&amp; ./zfile.sh Docker部署请自行前往DockerHub寻找合适的镜像 缺点这个软件虽然好用，但是仍然存在一些缺点。由于使用Java的JVM虚拟机，内存占用必不可少的会占用很客观的一部分。由于仍处于开发阶段，会出现各种各样的问题不支持文件夹下载暂时不支持上传文件有一些特定的系统会出现部署失误的问题不支持多用户（也没有意象） 原网址Github：https://github.com/zhaojun1998/zfile演示网站：https://zfile.jun6.net文档：http://docs.zhaojun.im/zfile","link":"/2020/08/20/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Z-file%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98%E7%9B%AE%E5%BD%95/"},{"title":"如何使用D2550搭建一个黑群晖","text":"最近突发奇想，想刷一个黑群晖玩玩，手头上正好有一块闲置的D2550的主板，本来想做软路由的，现在刚好用来把它作为黑群晖的载体。虽说性能一般，但是比原来的DS216j的白群晖，应该可玩性要高一些。 ** 本篇文章的下载地址都会在文章末尾出，如果需要，可以自行提取。** 机器配置主板：国光D2550这块主板上面没有现成的VGA口，可以去某宝上购买JVGA的转接头，本人亲测某宝上买的有些转接头不能用，建议直接找买D2550成品软路由的店家问问。主板上有两个SATA通道，一个标准SATA，一个mSATA，理论上可以组raid0或者1，但是没有试过。标准SATA需要购买大4Pin的硬盘供电线主板上有一个内存插槽，这次使用的是2G-DDR3内存两个原生的千兆网口，是组软路由的绝佳伴侣整机采用被动散热，个人认为这个散热是没有什么大问题的 硬盘使用的是日立的2.5寸7200转的垂直式机械硬盘，不是全新，之前在笔记本上使用过几年。因为不是组一个正经用的群晖，所以没有特意上NAS盘，节约成本。 (๑•̀ㅁ•́ฅ) 群晖系统： DS3617-6.1.7-15284这里使用DS3617-6.1.7，主要是因为板子太过古老，曾经尝试过安装DS918+-6.2.2，没有成功。但是3617很容易就成功了。 安装教程 找一个U盘，USB2.0就可以了，U盘大小最好高于4G，用作引导群晖系统用。将引导文件.img，文件结尾的文件通过rufus刷入U盘之中。*** 此操作会自动格式化，请先备份好数据 *** 打开自己的Windows电脑，使用Chipgenius查看U盘芯片的VID和PID，记录下来。通过DiskGenius打开/boot/boot/grub/grub.cfg，保存到桌面，使用记事本打开。将刚刚记录的VID和PID改正。（注意这里0x需要保留，请勿删除）。打开 https://web.gxnas.com/sn/ ，选择DS3617进行算号，将SN码和MAC地址复制下来，填入grub.cfg文件之中，并将文件覆盖会U盘文件之中。 将刷写好的U盘插入黑群晖硬件，在BIOS引导顺序将U盘移至最上方，开机。如果屏幕上显示如下界面，那么就可以将显示器拔了，只连一根网线就够了。 请预先将使用的硬盘内的文件全部清除，删除全部分区，避免格式化会出现的问题。 打开自己的电脑，在Synology assistant中间找到内网中的黑群晖，双击进入WEB管理界面，根据提示一步一步完成** （注意选择手动安装，然后上传.pat文件，请勿使用自动安装最新版本） **。提示注册Synology账号的时候点击跳过此步骤，我们是黑群晖，这里不能注册。 等待安装完成并自动重连，进入了熟悉的管理界面。 存储空间管理 点击存储空间管理员，先进RAID GROUP选项卡，新增新的group，根据自身需求来选择。 进入存储空间，点击新增，成功创建存储空间. 注意事项切记不要在DSM系统中将群晖升级，不然系统会损坏，数据需要另外导出，很麻烦。本人不建议将群晖洗白，去白嫖群晖官方的QuickConnet是不道德的，而且过度使用很可能迫使群晖官方封锁黑群晖，以后想用都不能用了，如果因为功能原因需要洗白，也不建议使用官方的QuickConnect，请注意！ 此文章参考了什么值得买上面的阿文菌的文章，文章原链接： https://post.smzdm.com/p/ag82zdd3/","link":"/2020/08/13/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8D2550%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%BB%91%E7%BE%A4%E6%99%96/"},{"title":"对于南方中国电信的5G初体验","text":"2023年更新这次回国已经是此次测试的两年多以后了，城区的5G覆盖基本到位，室内测速也能达到上百兆的速度了，此文现在已经不在准确，请以实际测速为准 原文如下最近一段时间更换了三星的S20+ 5G版本，碰巧遇到营业厅打来的推销5G套餐的电话，脑子一热，就升级了5G套餐。坐标位于江苏，原先是40G流量套餐，现在是每个月加上20元，每个月有100G的高速流量，看起来还是十分实惠的。（可惜宽带不能升级到1000Mbps）。接下来我就对城区内（我常去的地方）的一些地点进行了测速。 测速环境手机： Samsung Galaxy S20+ 5G运营商： 中国电信位置：江苏某二线城市市中心5KM半径以内软件： SpeedTest 江苏电信5G节点家庭宽带：500Mbps光纤入户，采用i3软路由加上tplink mesh作为AP（有可能跑不满500Mbps）** 测试区域在营业厅的5G建设图上都已经被5G信号覆盖了 ** 测速结果 室外 在室外信号满格的最好状态从这里可以看出，5G在室外还是十分优异的，速度很快（虽然没有达到他宣称的速度），延迟不是很高，和4G环境其实不相上下。 普通室外 在室外普通的情况下一般能达到100-300Mbps，速度看起来还是比4G要快很多的，延迟依然和4G相差不大，估计在玩游戏上还是不能达到和家庭宽带一样的效果 *不同室内 在室内测速，信号满格，是两种不同环境下在居民住宅中测的速，在较新的居民住宅中，速度达到50Mbps左右，和普通4G差不多速度。 但是在老式居民区中，信号少两格，（地理位置不同），速度竟然只达到2-5Mbps，这竟然比4G还要弱，这是大大出乎我的意料的 延迟方面从SpeedTest上面来看，5G的延迟和4G的相差无几，并没有宣传的低延迟，相较于家宽，还是有10-20ms的差距的。从游戏方面来看，（这里还没有做测试） 结论5G网络在室外已经十分的快了，速度已经能达到宽带水平。但是，5G网络的缺点也十分明显，现在的基础建设十分不足，在室内和室外，或者不同的地理位置，信号都有着巨大的差距，有的地方甚至都没有4G网络的质量好。（我相信大多数人用数据流量还是在室内用的）关于延迟方面，并没有推广说的低延迟，感觉和4G一个水平，比家庭宽带要高上10-20ms，对于游戏来说还是有一定影响的。测速时发现，网速由低到高都需要很长一段时间来爬升（从图中的趋势可以看出）相比家庭宽带爬升的要慢。我的建议是，如果现在急着换手机，那么可以买一个5G手机并且升级套餐，但是如果手机还能用，还不想换，那么也没有必要盲目升级5G，现在还不是完全成熟的阶段。 附：4G测速结果： 家庭宽带测速结果：","link":"/2020/08/05/%E5%AF%B9%E4%BA%8E%E5%8D%97%E6%96%B9%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E7%9A%845G%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"title":"如何在Windows10上挂载WebDav","text":"由于FTP的安全性堪忧，所以很多时候使用网络驱动器都会使用到WebDav协议来传输文件。许多网盘，像坚果云，NextCloud, CloudReve, 群晖等等都支持了WebDav协议的网络硬盘挂载，这篇文章主要讲述如何在Windows平台上挂载WebDav。 打开此电脑，点击映射网络驱动器请确保是** 映射网络驱动器 ，而不是 添加网络位置 **亲测，添加网络位置无法挂载基于Https的WebDav网络驱动器。 输入WebDav的url确保访问的路径正确，可以直接向提供者询问。 输入凭据因为WebDav相较于FTP更为安全，是不允许匿名访问的，这里需要填写提供商提供的Webdav登录用户名和密码， 返回到Windows资源管理器如果前面的步骤都没有报错的话，这一步应该能在此电脑这个界面看到新挂载的WebDav驱动器了","link":"/2020/07/31/%E5%A6%82%E4%BD%95%E5%9C%A8Windows10%E4%B8%8A%E6%8C%82%E8%BD%BDWebDav/"},{"title":"使用Docker配置Nextcloud","text":"本文参考：https://blog.wangriyu.wang/2018/05-server-nextcloud.htmlNextcloud是一个功能十分强大的，基于PHP的网盘系统，是个人或者组织进行建立私有云的不二之选。配合NextCloud中间众多的APP，可以实现很多功能，包括团队写作等等。 如何部署Nextcloud拉取两个镜像，并且创建docker-compose配置文件：cd ~ docker pull wonderfall/nextcloud docker pull mariadb:10 vi docker-compose.yml 粘贴进文本框以下内容：nextcloud: image: wonderfall/nextcloud container_name: nextcloud_web links: - nextcloud-db:nextcloud-db environment: - UID=1000 - GID=1000 - UPLOAD_MAX_SIZE=5G - APC_SHM_SIZE=128M - OPCACHE_MEM_SIZE=128 - CRON_PERIOD=15m - TZ=Aisa/Shanghai - ADMIN_USER=登录账号 - ADMIN_PASSWORD=登录密码 - DOMAIN=localhost - DB_TYPE=mysql - DB_NAME=nextcloud - DB_USER=nextcloud - DB_PASSWORD=数据库 nextcloud 账号密码 - DB_HOST=nextcloud-db volumes: # 文件会放在宿主机的 `/docker/nextcloud` 目录，如果不存在会自动创建 - /docker/nextcloud/data:/data - /docker/nextcloud/config:/config - /docker/nextcloud/apps:/apps2 - /docker/nextcloud/themes:/nextcloud/themes expose: - 8888 ports: # 宿主机端口:镜像端口 - 8888:8888/tcp restart: always nextcloud-db: image: mariadb:10 container_name: nextcloud_db volumes: # 数据库文件会放在宿主机的 `/docker/nextcloud/db` 目录，如果不存在会自动创建 - /docker/nextcloud/db:/var/lib/mysql environment: - MYSQL_ROOT_PASSWORD=数据库 root 密码 - MYSQL_DATABASE=nextcloud - MYSQL_USER=nextcloud - MYSQL_PASSWORD=数据库 nextcloud 账号密码 restart: always 这里使用Mariadb(Mysql)作为数据库，如果个人使用，对性能要求不高，希望负载较小，可以使用Sqlite，在这里删除nextcloud-db下的内容，并对上面nextcloud-web进行相应更改。 * 保存退出并运行：docker-compose up -d 测试之前需要等待一段时间，从这里开始容器应该就配置完成了，可以使用以下命令进行检验：docker ps -a // 可以看到容器已经起来 docker logs nextcloud_db // 查看数据库配置是否完成 docker logs nextcloud_web // 查看 nextcloud 是否配置完成 配置web反代配置web反向代理在这里将不会展开，新手可以使用BT-panel来进行图形化的操作，大佬就可以直接写Nginx的配置文件了，在这里就不过多赘述了。 使用Docker配置OnlyOffice Community Serverdocker pull onlyoffice/documentserver docker run -i -t -d -p 8080:80 onlyoffice/documentserver 访问一下:http://IP:8080如果出现绿色的勾，那么你的服务器就成功部署了 附：配置要求（官方）RAM: 4 GB+CPU: 双核 2 GHz +Swap: 至少2 GBHDD: 至少有2GB的剩余空间系统要求: RedHat 64bit，CentOS类、Debian类的内核版本3.8以上。Docker: 1.9.0版本及以上 问题解决这时候如果在nextcloud里面设置好OnlyOffice，打开一个Word文件什么都显示不出来，控制台报错： Refused to frame 'http://office.domain/' because it violates the following Content Security Policy directive: &quot;frame-src https://office.domain/&quot;. 这是因为OnlyOffice服务器在这里是默认使用Http传输，但是NextCloud是Https传输，两种内容不能混合在一起。我们需要在OnlyOffice服务器的反向代理配置中加入一句话就能搞定： proxy_set_header X-Forwarded-Proto $scheme; 保存后再次打开Word文件，发现显示正常：这样，NextCloud的主题就基本配置完成了/","link":"/2020/07/26/%E4%BD%BF%E7%94%A8Docker%E9%85%8D%E7%BD%AENextcloud/"},{"title":"Linux上的Docker各种教程汇总","text":"Docker作为一个轻量型的虚拟容器，因为他能够使部署各种服务十分的方便简单，受到许多人的喜爱，这篇教程主要讲Docker从安装到部署的各种方法和注意事项。 各种系统上面部署Docker环境docker的部署还是相对复杂的，好在，官方提供了一键部署脚本，配合上国内源，使我们能在各种地方轻松部署docker环境。 Centos脚本： 在任意目录下新建sh可执行文件：vim DockerInstall.sh复制粘贴以下内容（适用于“网络通畅”的主机）： #!/bin/bash # remove old version sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine # remove all docker data sudo rm -rf /var/lib/docker # preinstall utils sudo yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2 # add repository sudo yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo # make cache sudo yum makecache fast # install the latest stable version of docker sudo yum install -y docker-ce # start deamon and enable auto start when power on sudo systemctl start docker sudo systemctl enable docker # add current user sudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker 对于网络“不通畅”的主机，我们则使用以下脚本： #!/bin/bash # 移除掉旧的版本 sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine # 删除所有旧的数据 sudo rm -rf /var/lib/docker # 安装依赖包 sudo yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2 # 添加源，使用了阿里云镜像 sudo yum-config-manager \\ --add-repo \\ http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # 配置缓存 sudo yum makecache fast # 安装最新稳定版本的docker sudo yum install -y docker-ce # 配置镜像加速器 sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF' { &quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;] } EOF # 启动docker引擎并设置开机启动 sudo systemctl start docker sudo systemctl enable docker # 配置当前用户对docker的执行权限 sudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker Debian和Ubuntu脚本： 对于Debian和Ubuntu来说部署则简单许多，只需要运行以下命令：网络通畅：curl -sSL https://get.docker.com/ | sh 网络不通畅（DaoCloud）:curl -sSL https://get.daocloud.io/docker | sh** 这个脚本相对阿里云的来说更快一点，但是有一些小众的docker速度不快，或者存在找不到的情况 ** 阿里云的：curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh - 配置Docker Hub的镜像加速器 国内访问 Docker Hub 有时会遇到困难，此时可以配置镜像加速器。国内很多云服 务商都提供了加速器服务 阿里云的加速器地址：https://cr.console.aliyun.com/?spm=a2c4e.11153959.blogcont29941.9.699b69d6JE3Sgg#/accelerator 针对Docker客户端版本大于1.10.0的用户 您可以通过修改daemon配置文件/etc/docker/daemon.json（没有时新建该文件）来使用加速器: sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF' { &quot;registry-mirrors&quot;: [&quot;https://xxx.mirror.aliyuncs.com&quot;] } EOF sudo systemctl daemon-reload sudo systemctl restart docker 修改后 { &quot;registry-mirrors&quot;: [&quot;&lt;your accelerate address&gt;&quot;] } 安装docker-composedocker-compose支持用户使用一些现成的配置文件来部署一个容器，并且可定制性非常的强，适合开发者使用安装命令： apt install docker-compose ** 此处仅适用于Debian ** 使用Protainer来管理dockerProtainer是一款轻量级的docker网页管理系统，并且功能相对强大，支持多个服务器同时管理，十分好用。一键部署： docker run -d -p 9000:9000 --restart=always --name portainer -v /var/run/docker.sock:/var/run/docker.sock -v /Users/lee/dev/docker_file/portainer/data:/data docker.io/portainer/portainer 外部端口号：9000","link":"/2020/07/26/Linux%E4%B8%8A%E7%9A%84Docker%E5%90%84%E7%A7%8D%E6%95%99%E7%A8%8B%E6%B1%87%E6%80%BB/"},{"title":"Linux对于扩展系统分区容量的方式","text":"很多新手刚接触到虚拟机和Linux系统的时候都会对Linux的文件系统而产生疑惑，此篇文章主要讲述，在纯命令行下，如何对Linux的系统分区进行硬盘的容量扩展##在ESXI或Workstation中间扩展硬盘容量（基础）我认为此步骤不需要过多赘述了##更改分区表 运行 fdisk -l 查看本机的分区类型，查看主分区所处的位置 运行 fdisk /dev/sda ** 可以输入m 获得fdisk的帮助信息 **d删除需要扩容的分区p获得现有分区信息n创建新分区，设置大小和首尾wq保存这样子的话分区表就已经更新好了，但是文件系统还没有更新，我们接着需要更新文件系统。##更新文件系统 e2fsck -f /dev/sda1 resize2fs /dev/sda1 ** 注意，此处操作不会使原来文件丢失 **接着重启系统，发现磁盘容量已经扩容 *** 提示：任何磁盘操作都有丢失文件的风险，请先进行备份操作 *** ##附加：BT-Panel的多个硬盘一件挂载指令（和本文无关）这个命令方便的将未挂载的硬盘一键挂载到系统和BT-Panel上，十分方便。Centos: yum install wget -y &amp;&amp; wget -O auto_disk.sh http://download.bt.cn/tools/auto_disk.sh &amp;&amp; bash auto_disk.sh Ubuntu: wget -O auto_disk.sh http://download.bt.cn/tools/auto_disk.sh &amp;&amp; sudo bash auto_disk.sh Debian: wget -O auto_disk.sh http://download.bt.cn/tools/auto_disk.sh &amp;&amp; bash auto_disk.sh 一键挂载原文链接：https://www.bt.cn/bbs/thread-3187-1-1.html","link":"/2020/07/23/Linux%E5%AF%B9%E4%BA%8E%E6%89%A9%E5%B1%95%E7%B3%BB%E7%BB%9F%E5%88%86%E5%8C%BA%E5%AE%B9%E9%87%8F%E7%9A%84%E6%96%B9%E5%BC%8F/"},{"title":"关于这个博客","text":"##这个博客是从typecho移植过来的，为了能够使用github更好的全球分发，并且更加稳定。之前的文章很多都已经找不到了，主要是因为typecho稳定版中间的备份功能竟然有Bug，很烦！ （╯‵□′）╯︵┴─┴后面会继续记录一些个人的心路历程和踩坑经验，希望以后能够绕坑而行。","link":"/2020/07/23/%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"command notes","slug":"command-notes","link":"/tags/command-notes/"},{"name":"test file","slug":"test-file","link":"/tags/test-file/"}],"categories":[],"pages":[]}